*,
*::after,
*::before {
	box-sizing: border-box;
}

:root {
	font-size: 12px;
	--color-text: #000000;
	--color-bg: #fff;
	--color-link: #898989;
	--color-link-hover: #fff;
	--page-padding: 1.5rem;
}

body {
	margin: 0;
	color: var(--color-text);
	background-color: var(--color-bg);
	font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.js-enabled canvas {
	position: fixed;
	top: 0;
	left: 0;
}

/* Page Loader */
.js-enabled .loading::before,
.js-enabled .loading::after {
	content: '';
	position: fixed;
	z-index: 1000;
}

.js-enabled .loading::before {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--color-bg);
}

.js-enabled .loading::after {
	top: 50%;
	left: 50%;
	width: 60px;
	height: 60px;
	margin: -30px 0 0 -30px;
	border-radius: 50%;
	opacity: 0.4;
	background: var(--color-link);
	animation: loaderAnim 0.7s linear infinite alternate forwards;
}

@keyframes loaderAnim {
	to {
		opacity: 1;
		transform: scale3d(0.5, 0.5, 1);
	}
}

a {
	text-decoration: none;
	color: var(--color-link);
	outline: none;
	cursor: pointer;
}

a:hover {
	text-decoration: underline;
	color: var(--color-link-hover);
	outline: none;
}

/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
a:focus {
	/* Provide a fallback style for browsers that don't support :focus-visible */
	outline: none;
	background: lightgrey;
}

a:focus:not(:focus-visible) {
	/* Remove the focus indicator on mouse-focus for browsers that do support :focus-visible */
	background: transparent;
}

a:focus-visible {
	/* Draw a very noticeable focus style for keyboard-focus on browsers that do support :focus-visible */
	outline: 2px solid red;
	background: transparent;
}

.unbutton {
	background: none;
	border: 0;
	padding: 0;
	margin: 0;
	font: inherit;
	cursor: pointer;
}

.unbutton:focus {
	outline: none;
}

.main-header {
	text-transform: uppercase;
	padding: var(--page-padding);
	position: relative;
	display: flex;
	z-index: 1000;
	width: 100%;
	height: 100%;
	grid-row-gap: 1rem;
	grid-column-gap: 2rem;
	pointer-events: none;
}

.main-header #cdawrap {
	justify-self: start;
}

.main-header a {
	pointer-events: auto;
	color: white;
	font-size: 1.5rem;
}

.main-header__title {
	grid-area: title;
	font-size: inherit;
	margin: 0;
	color: white;
}

.main-header__back {
	grid-area: back;
	justify-self: start;
}

.main-header__archive {
	grid-area: archive;
	justify-self: start;
}

.main-header__sub {
	grid-area: sub;
}

.main-header__github {
	grid-area: github;
}

.main-header__tags {
	grid-area: tags;
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
}

.main-header__hire {
	grid-area: hire;
}

.main-header__wrapper {
	grid-area: demos;
	display: flex;
	gap: 1rem;
	margin-right: 1em;
}

.main-header__wrapper span {
	opacity: 0.8;
}

a.header-logo {
	font-weight: bold;
	color: var(--color-link-hover);
	position: absolute;
	bottom: 50%;
	right: 50%;
	transform: translate(50%, 50%);
	transition: bottom 0.2s, right 0.2s;
}

.content {
	padding: var(--page-padding);
	display: flex;
	flex-direction: column;
	width: 100vw;
	position: relative;
}

body {
	--page-padding: 2rem 3rem;
}

.main-header {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: flex-end;
	align-items: center;
			mix-blend-mode: difference;
}

.main-header #cdawrap,
.main-header__wrapper {
	justify-self: end;
}

.pagination {
	display: flex;
	gap: 1rem;
	margin-bottom: 1em;
}

.content {
	min-height: 100vh;
	justify-content: center;
	align-items: center;
}